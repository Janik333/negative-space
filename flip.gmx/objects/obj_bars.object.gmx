<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bars</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,obj_blackwall);
instance_create(x,y,obj_whitewall);
blackpressed = false;
whitepressed = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//MAKE CHANGES AFTER WHITE PUSHPULL (ALSO FOR OBJ_WHITEBUTTON)!!!!!!!!!!
//when both or neither are pressed
//if (!place_meeting(x,y,obj_blackpushpull) &amp;&amp; !place_meeting(x,y,obj_whitepushpull))
if (!place_meeting(x,y,obj_blackpushpull))
if (!(blackpressed ^ whitepressed) &amp;&amp; !place_meeting(x,y,obj_blackdude) &amp;&amp; !place_meeting(x,y,obj_whitedude) ){ 

    //block off for both players
    if (!collision_point(x,y,obj_blackwall,false,false))
        instance_create(x,y,obj_blackwall);
    if (!collision_point(x,y,obj_whitewall,false,false))
        instance_create(x,y,obj_whitewall);
        
    //start closing animation
    if (sprite_index == spr_barstrip || sprite_index == spr_barstrip2)
    {
        image_speed = -1;
    }
    else if (sprite_index == spr_blackwall){
        sprite_index = spr_barstrip2;
        image_index = 31;
        image_speed = -1;
    }
    else if (sprite_index == spr_whitewall){
        sprite_index = spr_barstrip;
        image_index = 31;
        image_speed = -1;
    }
    
    //fully closed animation
    if ((sprite_index == spr_barstrip2 || sprite_index == spr_barstrip) &amp;&amp; image_index &lt;= 1)
        sprite_index = spr_bars;

          
}
//when black button is pressed
else if (blackpressed){
    //start opening/closing
    image_speed = +1;
    if (!(sprite_index == obj_blackwall))
        sprite_index = spr_barstrip2;
    //fully opened/closed
    if (image_index &gt;= 31)
    {
        sprite_index = obj_blackwall;
        with(instance_position(x,y,obj_whitewall))
            instance_destroy();
    }

}
//when white button is pressed
else if (whitepressed){
    //start opening/closing
    image_speed = +1;
    if (!(sprite_index == obj_whitewall))
        sprite_index = spr_barstrip;
    //fully opened/closed
    if (image_index &gt;= 31)
    {
        sprite_index = obj_whitewall;
        with(instance_position(x,y,obj_blackwall))
            instance_destroy();
    }

}

mask_index = sprite_index;
        







</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
