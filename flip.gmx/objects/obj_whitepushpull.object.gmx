<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pushpullable2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>obj_whitewall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grav = 0.4;
vsp = 0;
snapleft = false;
snapright = false;

        //creates walls to the right
        for (var i = 64; i &lt; 128 ; i+=4)
        {
            j = x+i;
            if (!collision_point(j,y,obj_whitewall,false,false))
                instance_create (j,y,obj_blackpixel);
        }
        //creates walls to the left
        for (var i = -4; i &gt; -68 ; i-=4)
        {
            j = x+i;
            if (!collision_point(j,y,obj_whitewall,false,false))
                instance_create (j,y,obj_blackpixel);
        }
    
        //So white player moves with the block (when inside it)
        for(var i = 1; i &lt; 64; i+=30){
            j = y+i;
            if (collision_point(x,j,obj_blackdude,false,false)){
                obj_blackdude.x += 4;
            }
            if (collision_point(x+63,j,obj_blackdude,false,false)){
                obj_blackdude.x -= 4;
            }
        }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (vsp &lt; 10) vsp += grav;

//Vertical Collision
if (place_meeting(x,y+vsp,obj_whitewall))
{
    while(!place_meeting(x,y+sign(vsp),obj_whitewall))
    {
        y += sign(vsp);
        if (place_meeting(x,y,obj_blackdude))
            obj_blackdude.y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;

if (place_meeting(x,y,obj_blackdude))
    obj_blackdude.y += vsp;

//with(instance_position(x,y,obj_blackwall))
//    instance_destroy();
//Only execute this code if the block is on the ground
if (place_meeting(x,y+1,obj_whitewall))
{
    //destroy white walls (so white player can go through)
    var j;
    for (j = 0; j &lt; 64; j++)
    {
        with(instance_position(x+j,y,obj_blackwall))
            instance_destroy();
        with(instance_position(x+j,y+63,obj_blackwall))
            instance_destroy();
    }       
    var k;
    for (k = 0; k &lt; 64; k+=4)
    {
        with(instance_position(x,y+k,obj_blackwall))
            instance_destroy();
        with(instance_position(x+63,y+k,obj_blackwall))
            instance_destroy();       
    }
}

//creates/deletes walls and player inside moves with it
if (xprevious != x || yprevious != y)
{
    //creates walls to the right
    for (var i = 60; i &lt; 128 ; i+=4)
    {
        fix = 0;
        if(yprevious != y)
            fix++;
        j = x+i;
        if (!collision_point(j,y,obj_whitewall,false,false) &amp;&amp; !collision_point(j,y,obj_blackwall,false,false))
            instance_create (j,y-fix,obj_blackpixel);
    }
    //creates walls to the left
    for (var i = -4; i &gt; -68 ; i-=4)
    {
        fix = 0;
        if(yprevious != y)
            fix++;
        j = x+i;
        if (!collision_point(j,y,obj_whitewall,false,false) &amp;&amp; !collision_point(j,y,obj_blackwall,false,false))
            instance_create (j,y-fix,obj_blackpixel);
    }
    
    //So white player moves with the block (when inside it)
    for(var i = 1; i &lt; 64; i+=30){
        j = y+i;
        if (collision_point(x,j,obj_blackdude,false,false)){
            obj_blackdude.x += 4;
        }
        if (collision_point(x+63,j,obj_blackdude,false,false)){
            obj_blackdude.x -= 4;
        }
    }
    //moves more if they are stuck in roof
    if (collision_point(x+32,y+2,obj_blackdude,false,false) || collision_point(x+31,y+2,obj_blackdude,false,false))
        obj_blackdude.y += 4; 
}

//Only execute this code if the block is in the air 
//creates white wall above
if (y != yprevious)
{
    if ((y%64) &gt; 32 &amp;&amp; (y%64) &lt; 60)
    {
        j = y%64;
        if (!collision_point(x,y-j,obj_whitewall,false,false))
            instance_create (x,y-j,obj_blackpixelvert);
    }
    
    for (var i = 0; i &lt; 64 ; i+=1)
    {
        if (!position_meeting(x+32, y-i, all))
            if(!collision_point(x+32,y-i-3,obj_whitewall,false,false))
                instance_create (x,y-i-3,obj_blackpixelvert);
    }
}


//destroy if it falls out
if (y &gt; room_height) y = -64;
/*
if (x &gt;= room_width - 64 &amp;&amp; x &lt; room_width)
{
    if (!place_meeting(x - room_width, y, obj_whitepushpull))
        instance_create(x - room_width, y, obj_whitepushpull);
}
if (collision_point(x - room_width, y, obj_whitepushpull, false, false)){
    var inst2 = instance_position(x - room_width, y, obj_whitepushpull);
    inst2.x = x - room_width;
}
    
/*if (x &lt; 16)
    if (!place_meeting(x + room_width, y, obj_blackpushpull))
    {
        instance_create(x + room_width, y, obj_blackpushpull);
        var inst2 = instance_position(x + room_width, y, obj_blackpushpull);

    }
    *//*
if (x &gt;= room_width+31)
    instance_destroy();
//if (x &lt; -16)
//    instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_whitehandle, -1, x-4, y);
draw_sprite(spr_whitehandle2, -1, x+64, y);
draw_set_color(c_white);
draw_rectangle(x,y,x+63,y+63,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
